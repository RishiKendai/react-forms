{"ast":null,"code":"var _jsxFileName = \"R:\\\\Web\\\\React\\\\Task\\\\client\\\\src\\\\pages\\\\TakeSurvey.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigatem, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getSpecificSurvey } from '../utils/APIRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TakeSurvey() {\n  _s();\n  const {\n    uid,\n    id\n  } = useParams();\n  const [survey, setsurvey] = useState({\n    surveyName: '',\n    questions: [],\n    amount: 0\n  });\n  useEffect(() => {\n    if (id && uid) {\n      async function getSurvey() {\n        const {\n          data\n        } = await axios.post(`${getSpecificSurvey}/${id}/view`, {\n          userId: uid\n        });\n        setsurvey({\n          surveyName: data.survey.surveyName,\n          questions: data.survey.questions,\n          amount: data.survey.amount\n        });\n      }\n      getSurvey();\n    }\n  }, [id, uid]);\n  console.log(survey.questions);\n  return /*#__PURE__*/_jsxDEV(Component, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: survey.surveyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), survey.questions && survey.questions.map(q => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: q.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), q.answerType === 'radio-btn' && (q === null || q === void 0 ? void 0 : q.option.map((opt, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: q.id,\n                type: \"radio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: opt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 23\n            }, this);\n          })), q.answerType === 'drop-down' && /*#__PURE__*/_jsxDEV(\"select\", {\n            name: q.id,\n            id: \"\",\n            children: q.option.map((opt, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                children: opt\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 30\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)]\n        }, q.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(TakeSurvey, \"HMeQnqfOCzTfGTbhd2UUECfZ30g=\", false, function () {\n  return [useParams];\n});\n_c = TakeSurvey;\nconst Component = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2% 1%;\n  background: #ffffff99;\n  form {\n    width: 380px;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 1%;\n    background: hsl(0 100% 100% / 0.35);\n    background: linear-gradient(145deg, hsl(270 100% 39%), hsl(280 100% 35%));\n    backdrop-filter: blur(29px) saturate(100%);\n    box-shadow: 0 0 30px hsl(0 0% 0% / 0.21);\n    h3 {\n      font: 500 1.2rem var(--ralewayFont);\n      margin-bottom: 1rem;\n      align-self: center;\n      color: #ffffff;\n    }\n    .set {\n      margin-bottom: 1.4rem;\n    }\n    .question {\n      font: 400 1.1rem var(--poppinsFont);\n      margin-bottom: 0.8rem;\n      color: #ffffffda;\n    }\n    .radio {\n      display: flex;\n      margin-bottom: 0.3rem;\n      gap: 0.3rem;\n      input {\n        border: none;\n        font-size: 0.9rem;\n        background: none;\n        accent-color: #282828;\n      }\n      label {\n        font: 400 0.91rem var(--poppinsFont);\n        color: #ffffff99;\n      }\n    }\n    select{\n      padding: ;\n    }\n  }\n`;\n_c2 = Component;\nvar _c, _c2;\n$RefreshReg$(_c, \"TakeSurvey\");\n$RefreshReg$(_c2, \"Component\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigatem","useParams","axios","styled","ToastContainer","toast","getSpecificSurvey","TakeSurvey","uid","id","survey","setsurvey","surveyName","questions","amount","getSurvey","data","post","userId","console","log","map","q","question","answerType","option","opt","index","Component","div"],"sources":["R:/Web/React/Task/client/src/pages/TakeSurvey.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigatem, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { getSpecificSurvey } from '../utils/APIRoutes';\r\n\r\nexport default function TakeSurvey() {\r\n  const { uid, id } = useParams();\r\n  const [survey, setsurvey] = useState({\r\n    surveyName: '',\r\n    questions: [],\r\n    amount: 0,\r\n  });\r\n  useEffect(() => {\r\n    if (id && uid) {\r\n      async function getSurvey() {\r\n        const { data } = await axios.post(`${getSpecificSurvey}/${id}/view`, {\r\n          userId: uid,\r\n        });\r\n        setsurvey({\r\n          surveyName: data.survey.surveyName,\r\n          questions: data.survey.questions,\r\n          amount: data.survey.amount,\r\n        });\r\n      }\r\n      getSurvey();\r\n    }\r\n  }, [id, uid]);\r\n  console.log(survey.questions);\r\n  return (\r\n    <Component>\r\n      <form action=\"\">\r\n        <h3>{survey.surveyName}</h3>\r\n        {survey.questions &&\r\n          survey.questions.map((q) => {\r\n            return (\r\n              <div className=\"set\" key={q.id}>\r\n                <div className=\"question\">{q.question}</div>\r\n                {q.answerType === 'radio-btn' &&\r\n                  q?.option.map((opt, index) => {\r\n                    return (\r\n                      <div className=\"radio\" key={index}>\r\n                        <input name={q.id} type=\"radio\" />\r\n                        <label>{opt}</label>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                {q.answerType === 'drop-down' && (\r\n                  <select name={q.id} id=\"\">\r\n                    {q.option.map((opt, index) => {\r\n                      return <option key={index}>{opt}</option>;\r\n                    })}\r\n                  </select>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n      </form>\r\n    </Component>\r\n  );\r\n}\r\n\r\nconst Component = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 2% 1%;\r\n  background: #ffffff99;\r\n  form {\r\n    width: 380px;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1%;\r\n    background: hsl(0 100% 100% / 0.35);\r\n    background: linear-gradient(145deg, hsl(270 100% 39%), hsl(280 100% 35%));\r\n    backdrop-filter: blur(29px) saturate(100%);\r\n    box-shadow: 0 0 30px hsl(0 0% 0% / 0.21);\r\n    h3 {\r\n      font: 500 1.2rem var(--ralewayFont);\r\n      margin-bottom: 1rem;\r\n      align-self: center;\r\n      color: #ffffff;\r\n    }\r\n    .set {\r\n      margin-bottom: 1.4rem;\r\n    }\r\n    .question {\r\n      font: 400 1.1rem var(--poppinsFont);\r\n      margin-bottom: 0.8rem;\r\n      color: #ffffffda;\r\n    }\r\n    .radio {\r\n      display: flex;\r\n      margin-bottom: 0.3rem;\r\n      gap: 0.3rem;\r\n      input {\r\n        border: none;\r\n        font-size: 0.9rem;\r\n        background: none;\r\n        accent-color: #282828;\r\n      }\r\n      label {\r\n        font: 400 0.91rem var(--poppinsFont);\r\n        color: #ffffff99;\r\n      }\r\n    }\r\n    select{\r\n      padding: ;\r\n    }\r\n  }\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"R:\\\\Web\\\\React\\\\Task\\\\client\\\\src\\\\pages\\\\TakeSurvey.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { getSpecificSurvey, submitSurvey } from '../utils/APIRoutes';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TakeSurvey() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    uid,\n    id,\n    cid\n  } = useParams();\n  const answerRef = useRef([]);\n  const [answers, setAnswers] = useState([]);\n  const [survey, setsurvey] = useState({\n    surveyName: '',\n    questions: [],\n    amount: 0\n  });\n  useEffect(() => {\n    if (id && uid) {\n      async function getSurvey() {\n        const {\n          data\n        } = await axios.post(`${getSpecificSurvey}/${id}/view`, {\n          userId: uid\n        });\n        if (data.status === 'completed') {\n          !toast.isActive('sur-tid') && toast.success(data.msg, {\n            toastId: 'sur-tid',\n            position: 'top-center',\n            autoClose: 5000,\n            closeButton: false,\n            pauseOnHover: true,\n            delay: 0,\n            draggable: true,\n            theme: 'colored'\n          });\n          setTimeout(() => navigate(-1), 6000);\n        }\n        if (data.status === true) {\n          setsurvey({\n            surveyName: data.survey.surveyName,\n            questions: data.survey.questions,\n            amount: data.survey.amount\n          });\n          setAnswers([]);\n          data.survey.questions.forEach(data => {\n            setAnswers(prev => [...prev, {\n              ...data,\n              option: []\n            }]);\n          });\n        }\n      }\n      getSurvey();\n    }\n  }, [id, uid]);\n  // {\n  // \t\"surveyId\":\"6352b9011339d12313798463\",\n  // \t\"userId\":\"63535cf972c40610b643c1e3\",\n  // \t\"answers\": [{\"id\":\"100\",\"question\":\"choose elective 1\",\"answerType\":\"radio-btn\",\"required\":true,\"option\":[\"ooad\"]},\n  // \t\t\t\t\t\t\t{\"id\":\"101\",\"question\":\"choose elective 2\",\"answerType\":\"drop-down\",\"required\":true,\"option\":[\"ui/ux\"]},\n  // \t\t\t\t\t\t\t{\"id\":\"103\",\"question\":\"choose elective 3\",\"answerType\":\"radio-btn\",\"required\":true,\"option\":[\"block chain\"]}]\n  //   creatorId,\n  //   surveyName\n  // }\n\n  async function sendSurvey(e) {\n    // const { data } = await axios.post(submitSurvey, finalAnswers);\n    // if (data.status) {\n    //   let users = await JSON.parse(localStorage.getItem('sur-uid'));\n    //   users.amount += survey.amount;\n    //   users.surveys.push(id);\n    //   localStorage.setItem('sur-uid', JSON.stringify(users));\n    //   navigate(-1);\n    // }\n  }\n  async function handleAnswerChange(qid, name, value) {\n    let tempAnswers = [...answers];\n    if (name === 'radio-btn' || name === 'drop-down' || name === 'text') {\n      console.log('bf ', tempAnswers);\n      tempAnswers.map(ans => ans.questionId === qid && (ans.option = [value]));\n      setAnswers([...tempAnswers]);\n      console.log('af ', tempAnswers);\n    }\n    if (name === 'check-box') {\n      tempAnswers.map(ans => ans.questionId === qid && [...ans.option].includes(value) ? ans.option = [...ans.option].filter(op => op !== value) : ans.option = [...ans.option, value]);\n      await setAnswers([...tempAnswers]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Component, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), survey.questions.length > 0 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendSurvey,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: survey && survey.surveyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), survey.questions && survey.questions.map(q => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"set\",\n          id: q.questionId,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: q.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this), q.answerType === 'radio-btn' && (q === null || q === void 0 ? void 0 : q.option.map((opt, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                name: q === null || q === void 0 ? void 0 : q.questionId,\n                id: `${q.questionId}-${index}`,\n                type: \"radio\",\n                onClick: () => {\n                  handleAnswerChange(q.questionId, 'radio-btn', opt);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `${q.questionId}-${index}`,\n                children: opt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 27\n              }, this)]\n            }, `${q.questionId}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this);\n          })), q.answerType === 'drop-down' && /*#__PURE__*/_jsxDEV(\"select\", {\n            name: q.questionId,\n            id: q.questionId,\n            children: q.option.map((opt, index) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                onChange: () => {\n                  handleAnswerChange(q.questionId, 'drop-down', opt);\n                },\n                children: opt\n              }, uuidv4(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), q.answerType === 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => {\n              handleAnswerChange(q.questionId, 'text', e.target.value);\n            },\n            className: \"text\",\n            name: q.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), q.answerType === 'check-box' && (q === null || q === void 0 ? void 0 : q.option.map((opt, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"check-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onClick: e => {\n                  handleAnswerChange(q.questionId, 'check-box', e.target.value);\n                },\n                name: q === null || q === void 0 ? void 0 : q.questionId,\n                id: `${q.questionId}-${index}`,\n                type: \"checkbox\",\n                value: opt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `${q.questionId}-${index}`,\n                children: opt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 27\n              }, this)]\n            }, uuidv4(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this);\n          }))]\n        }, q.questionId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(TakeSurvey, \"oBl+NR6Cc5KphejMS4E0hORUgmY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = TakeSurvey;\nconst Component = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2% 1%;\n  background: #ffffff99;\n  form {\n    width: 480px;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    padding: 1% 0.8rem;\n    background: hsl(0 100% 100% / 0.35);\n    background: linear-gradient(145deg, hsl(270 100% 39%), hsl(280 100% 35%));\n    backdrop-filter: blur(29px) saturate(100%);\n    box-shadow: 0 0 30px hsl(0 0% 0% / 0.21);\n    overflow-y: auto;\n    ::-webkit-scrollbar {\n      width: 7px;\n      background: transparent;\n    }\n    ::-webkit-scrollbar-thumb {\n      background: hsl(0 100% 100% / 0.52);\n      backdrop-filter: blur(28px);\n      -webkit-backdrop-filter: blur(28px);\n      border-radius: 50px;\n    }\n    h3 {\n      font: 500 1.2rem var(--ralewayFont);\n      margin-bottom: 1rem;\n      align-self: center;\n      color: #ffffff;\n    }\n    .set {\n      margin-bottom: 1.4rem;\n    }\n    .question {\n      font: 400 1.1rem var(--poppinsFont);\n      margin-bottom: 0.8rem;\n      color: #ffffffda;\n    }\n    .radio,\n    .check-box {\n      display: flex;\n      /* flex-direction: column; */\n      margin-bottom: 0.3rem;\n      gap: 0.3rem;\n      input {\n        border: none;\n        font-size: 0.9rem;\n        background: none;\n        accent-color: #282828;\n      }\n      label {\n        font: 400 0.91rem var(--poppinsFont);\n        color: #ffffff99;\n      }\n    }\n    .text {\n      border: none;\n      outline: none;\n      padding: 0.5rem;\n      font: 400 0.94rem var(--openSansFont);\n      color: #f8f8f8;\n      width: 100%;\n      background: hsl(0 100% 100% / 0.12);\n      backdrop-filter: blur(28px);\n      -webkit-backdrop-filter: blur(28px);\n      border-radius: 5px;\n      box-shadow: 0 0 30px hsl(0 0% 0% / 0.31);\n    }\n    select {\n      border: none;\n      outline: none;\n      cursor: pointer;\n      padding: 0.4rem 0.7rem;\n      box-shadow: 0 9px 28px #0000004a;\n      font: 400 0.99rem var(--openSansFont);\n      border-radius: 5px;\n    }\n    .submit {\n      align-self: center;\n      padding: 0.4rem;\n      font: 800 1.4rem var(--openSansFont);\n      width: 50%;\n      border-radius: 5px;\n      border: none;\n      outline: none;\n      color: hsl(270 100% 59%);\n      cursor: pointer;\n      box-shadow: 0 9px 28px hsl(0 0% 0%/ 0.29);\n    }\n  }\n`;\n_c2 = Component;\nvar _c, _c2;\n$RefreshReg$(_c, \"TakeSurvey\");\n$RefreshReg$(_c2, \"Component\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","axios","styled","ToastContainer","toast","getSpecificSurvey","submitSurvey","v4","uuidv4","TakeSurvey","navigate","uid","id","cid","answerRef","answers","setAnswers","survey","setsurvey","surveyName","questions","amount","getSurvey","data","post","userId","status","isActive","success","msg","toastId","position","autoClose","closeButton","pauseOnHover","delay","draggable","theme","setTimeout","forEach","prev","option","sendSurvey","e","handleAnswerChange","qid","name","value","tempAnswers","console","log","map","ans","questionId","includes","filter","op","length","q","question","answerType","opt","index","target","Component","div"],"sources":["R:/Web/React/Task/client/src/pages/TakeSurvey.jsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { getSpecificSurvey, submitSurvey } from '../utils/APIRoutes';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default function TakeSurvey() {\r\n  const navigate = useNavigate();\r\n  const { uid, id, cid } = useParams();\r\n  const answerRef = useRef([]);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [survey, setsurvey] = useState({\r\n    surveyName: '',\r\n    questions: [],\r\n    amount: 0,\r\n  });\r\n  useEffect(() => {\r\n    if (id && uid) {\r\n      async function getSurvey() {\r\n        const { data } = await axios.post(`${getSpecificSurvey}/${id}/view`, {\r\n          userId: uid,\r\n        });\r\n        if (data.status === 'completed') {\r\n          !toast.isActive('sur-tid') &&\r\n            toast.success(data.msg, {\r\n              toastId: 'sur-tid',\r\n              position: 'top-center',\r\n              autoClose: 5000,\r\n              closeButton: false,\r\n              pauseOnHover: true,\r\n              delay: 0,\r\n              draggable: true,\r\n              theme: 'colored',\r\n            });\r\n          setTimeout(() => navigate(-1), 6000);\r\n        }\r\n        if (data.status === true) {\r\n          setsurvey({\r\n            surveyName: data.survey.surveyName,\r\n            questions: data.survey.questions,\r\n            amount: data.survey.amount,\r\n          });\r\n          setAnswers([]);\r\n          data.survey.questions.forEach((data) => {\r\n            setAnswers((prev) => [...prev, { ...data, option: [] }]);\r\n          });\r\n        }\r\n      }\r\n      getSurvey();\r\n    }\r\n  }, [id, uid]);\r\n  // {\r\n  // \t\"surveyId\":\"6352b9011339d12313798463\",\r\n  // \t\"userId\":\"63535cf972c40610b643c1e3\",\r\n  // \t\"answers\": [{\"id\":\"100\",\"question\":\"choose elective 1\",\"answerType\":\"radio-btn\",\"required\":true,\"option\":[\"ooad\"]},\r\n  // \t\t\t\t\t\t\t{\"id\":\"101\",\"question\":\"choose elective 2\",\"answerType\":\"drop-down\",\"required\":true,\"option\":[\"ui/ux\"]},\r\n  // \t\t\t\t\t\t\t{\"id\":\"103\",\"question\":\"choose elective 3\",\"answerType\":\"radio-btn\",\"required\":true,\"option\":[\"block chain\"]}]\r\n  //   creatorId,\r\n  //   surveyName\r\n  // }\r\n\r\n  async function sendSurvey(e) {\r\n    // const { data } = await axios.post(submitSurvey, finalAnswers);\r\n    // if (data.status) {\r\n    //   let users = await JSON.parse(localStorage.getItem('sur-uid'));\r\n    //   users.amount += survey.amount;\r\n    //   users.surveys.push(id);\r\n    //   localStorage.setItem('sur-uid', JSON.stringify(users));\r\n    //   navigate(-1);\r\n    // }\r\n  }\r\n\r\n  async function handleAnswerChange(qid, name, value) {\r\n    let tempAnswers = [...answers];\r\n\r\n    if (name === 'radio-btn' || name === 'drop-down' || name === 'text') {\r\n      console.log('bf ', tempAnswers);\r\n      tempAnswers.map(\r\n        (ans) => ans.questionId === qid && (ans.option = [value])\r\n      );\r\n      setAnswers([...tempAnswers]);\r\n      console.log('af ', tempAnswers);\r\n    }\r\n\r\n    if (name === 'check-box') {\r\n      tempAnswers.map((ans) =>\r\n        ans.questionId === qid && [...ans.option].includes(value)\r\n          ? (ans.option = [...ans.option].filter((op) => op !== value))\r\n          : (ans.option = [...ans.option, value])\r\n      );\r\n      await setAnswers([...tempAnswers]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Component>\r\n      <ToastContainer />\r\n      {survey.questions.length > 0 && (\r\n        <form onSubmit={sendSurvey}>\r\n          <h3>{survey && survey.surveyName}</h3>\r\n          {survey.questions &&\r\n            survey.questions.map((q) => {\r\n              return (\r\n                <div className=\"set\" id={q.questionId} key={q.questionId}>\r\n                  <div className=\"question\">{q.question}</div>\r\n                  {q.answerType === 'radio-btn' &&\r\n                    q?.option.map((opt, index) => {\r\n                      return (\r\n                        <div key={`${q.questionId}-${index}`} className=\"radio\">\r\n                          <input\r\n                            name={q?.questionId}\r\n                            id={`${q.questionId}-${index}`}\r\n                            type=\"radio\"\r\n                            onClick={() => {\r\n                              handleAnswerChange(\r\n                                q.questionId,\r\n                                'radio-btn',\r\n                                opt\r\n                              );\r\n                            }}\r\n                          />\r\n                          <label htmlFor={`${q.questionId}-${index}`}>\r\n                            {opt}\r\n                          </label>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  {q.answerType === 'drop-down' && (\r\n                    <select name={q.questionId} id={q.questionId}>\r\n                      {q.option.map((opt, index) => {\r\n                        return (\r\n                          <option\r\n                            onChange={() => {\r\n                              handleAnswerChange(\r\n                                q.questionId,\r\n                                'drop-down',\r\n                                opt\r\n                              );\r\n                            }}\r\n                            key={uuidv4()}\r\n                          >\r\n                            {opt}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  )}\r\n                  {q.answerType === 'text' && (\r\n                    <input\r\n                      type=\"text\"\r\n                      onChange={(e) => {\r\n                        handleAnswerChange(\r\n                          q.questionId,\r\n                          'text',\r\n                          e.target.value\r\n                        );\r\n                      }}\r\n                      className=\"text\"\r\n                      name={q.id}\r\n                    />\r\n                  )}\r\n                  {q.answerType === 'check-box' &&\r\n                    q?.option.map((opt, index) => {\r\n                      return (\r\n                        <div key={uuidv4()} className=\"check-box\">\r\n                          <input\r\n                            onClick={(e) => {\r\n                              handleAnswerChange(\r\n                                q.questionId,\r\n                                'check-box',\r\n                                e.target.value\r\n                              );\r\n                            }}\r\n                            name={q?.questionId}\r\n                            id={`${q.questionId}-${index}`}\r\n                            type=\"checkbox\"\r\n                            value={opt}\r\n                          />\r\n                          <label htmlFor={`${q.questionId}-${index}`}>\r\n                            {opt}\r\n                          </label>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </div>\r\n              );\r\n            })}\r\n          <button className=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n    </Component>\r\n  );\r\n}\r\n\r\nconst Component = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 2% 1%;\r\n  background: #ffffff99;\r\n  form {\r\n    width: 480px;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1% 0.8rem;\r\n    background: hsl(0 100% 100% / 0.35);\r\n    background: linear-gradient(145deg, hsl(270 100% 39%), hsl(280 100% 35%));\r\n    backdrop-filter: blur(29px) saturate(100%);\r\n    box-shadow: 0 0 30px hsl(0 0% 0% / 0.21);\r\n    overflow-y: auto;\r\n    ::-webkit-scrollbar {\r\n      width: 7px;\r\n      background: transparent;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      background: hsl(0 100% 100% / 0.52);\r\n      backdrop-filter: blur(28px);\r\n      -webkit-backdrop-filter: blur(28px);\r\n      border-radius: 50px;\r\n    }\r\n    h3 {\r\n      font: 500 1.2rem var(--ralewayFont);\r\n      margin-bottom: 1rem;\r\n      align-self: center;\r\n      color: #ffffff;\r\n    }\r\n    .set {\r\n      margin-bottom: 1.4rem;\r\n    }\r\n    .question {\r\n      font: 400 1.1rem var(--poppinsFont);\r\n      margin-bottom: 0.8rem;\r\n      color: #ffffffda;\r\n    }\r\n    .radio,\r\n    .check-box {\r\n      display: flex;\r\n      /* flex-direction: column; */\r\n      margin-bottom: 0.3rem;\r\n      gap: 0.3rem;\r\n      input {\r\n        border: none;\r\n        font-size: 0.9rem;\r\n        background: none;\r\n        accent-color: #282828;\r\n      }\r\n      label {\r\n        font: 400 0.91rem var(--poppinsFont);\r\n        color: #ffffff99;\r\n      }\r\n    }\r\n    .text {\r\n      border: none;\r\n      outline: none;\r\n      padding: 0.5rem;\r\n      font: 400 0.94rem var(--openSansFont);\r\n      color: #f8f8f8;\r\n      width: 100%;\r\n      background: hsl(0 100% 100% / 0.12);\r\n      backdrop-filter: blur(28px);\r\n      -webkit-backdrop-filter: blur(28px);\r\n      border-radius: 5px;\r\n      box-shadow: 0 0 30px hsl(0 0% 0% / 0.31);\r\n    }\r\n    select {\r\n      border: none;\r\n      outline: none;\r\n      cursor: pointer;\r\n      padding: 0.4rem 0.7rem;\r\n      box-shadow: 0 9px 28px #0000004a;\r\n      font: 400 0.99rem var(--openSansFont);\r\n      border-radius: 5px;\r\n    }\r\n    .submit {\r\n      align-self: center;\r\n      padding: 0.4rem;\r\n      font: 800 1.4rem var(--openSansFont);\r\n      width: 50%;\r\n      border-radius: 5px;\r\n      border: none;\r\n      outline: none;\r\n      color: hsl(270 100% 59%);\r\n      cursor: pointer;\r\n      box-shadow: 0 9px 28px hsl(0 0% 0%/ 0.29);\r\n    }\r\n  }\r\n`;\r\n"],"mappings":"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CAAC,CAACL,UAAW,IAAGS,KAAM,EAAE;gBAC/B,IAAI,EAAC,UAAU;gBACf,KAAK,EAAED;cAAI;gBAAA;gBAAA;gBAAA;cAAA,QACX,eACF;gBAAO,OAAO,EAAG,GAAEH,CAAC,CAACL,UAAW,IAAGS,KAAM,EAAE;gBAAA,UACxCD;cAAG;gBAAA;gBAAA;gBAAA;cAAA,QACE;YAAA,GAhBArD,MAAM,EAAE;cAAA;cAAA;cAAA;YAAA,QAiBZ;UAEV,CAAC,CAAC;QAAA,GAhFsCkD,CAAC,CAACL,UAAU;UAAA;UAAA;UAAA;QAAA,QAiFlD;MAEV,CAAC,CAAC,eACJ;QAAQ,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAE7C;EAAA;IAAA;IAAA;IAAA;EAAA,QACS;AAEhB;AAAC,GA1LuB5C,UAAU;EAAA,QACfV,WAAW,EACHC,SAAS;AAAA;AAAA,KAFZS,UAAU;AA4LlC,MAAMuD,SAAS,GAAG9D,MAAM,CAAC+D,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MA9FID,SAAS;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}